package scraper;

import com.google.common.base.MoreObjects;

import javax.annotation.Nullable;
import java.util.Objects;
import java.util.Optional;

public class Apartment {

    public enum ApartmentSource {
        TROJMIASTO_PL,
        OLX_PL,
        OTODOM_PL
    }

    @Nullable
    private final String title;
    @Nullable
    private final String url;
    @Nullable
    private final String price;
    @Nullable
    private final String rooms;
    @Nullable
    private final String area;
    @Nullable
    private final String location;

    private final ApartmentSource source;

    // region Constructor, getters, equals, hashCode, toString, builder -- generated by BoB the Builder of Beans
    // The code below has been generated by BoB the Builder of Beans based on the class' fields.
    // Everything after this comment will be regenerated if you invoke BoB again.
    // If you don't know who BoB is, you can find him here: https://bitbucket.org/atlassianlabs/bob-the-builder-of-beans

    protected Apartment(@Nullable String title, @Nullable String url, @Nullable String price, @Nullable String rooms, @Nullable String area, @Nullable String location, ApartmentSource source) {
        this.title = title;
        this.url = url;
        this.price = price;
        this.rooms = rooms;
        this.area = area;
        this.location = location;
        this.source = Objects.requireNonNull(source);
    }

    // region Getters -- generated by BoB the Builder of Beans
    public Optional<String> getTitle() {
        return Optional.ofNullable(title);
    }

    public Optional<String> getUrl() {
        return Optional.ofNullable(url);
    }

    public Optional<String> getPrice() {
        return Optional.ofNullable(price);
    }

    public Optional<String> getRooms() {
        return Optional.ofNullable(rooms);
    }

    public Optional<String> getArea() {
        return Optional.ofNullable(area);
    }

    public Optional<String> getLocation() {
        return Optional.ofNullable(location);
    }

    public ApartmentSource getSource() {
        return source;
    }// endregion Getters

    // region hashCode() and equals() -- generated by BoB the Builder of Beans
    @Override
    public boolean equals(Object o) {
        if (this == o) {
            return true;
        }
        if (o == null || getClass() != o.getClass()) {
            return false;
        }

        Apartment that = (Apartment) o;

        return Objects.equals(this.getTitle(), that.getTitle()) && Objects.equals(this.getUrl(), that.getUrl()) && Objects.equals(this.getPrice(), that.getPrice()) && Objects.equals(this.getRooms(), that.getRooms()) && Objects.equals(this.getArea(), that.getArea()) && Objects.equals(this.getLocation(), that.getLocation()) && Objects.equals(this.getSource(), that.getSource());
    }

    @Override
    public int hashCode() {
        return Objects.hash(getTitle(), getUrl(), getPrice(), getRooms(), getArea(), getLocation(), getSource());
    }// endregion hashCode() and equals()

    // region toString() -- generated by BoB the Builder of Beans
    @Override
    public String toString() {
        return MoreObjects.toStringHelper(this)
                .add("title", getTitle())
                .add("url", getUrl())
                .add("price", getPrice())
                .add("rooms", getRooms())
                .add("area", getArea())
                .add("location", getLocation())
                .add("source", getSource())
                .toString();
    }// endregion toString()

    // region Builder -- generated by BoB the Builder of Beans
    public static Apartment.Builder builder() {
        return new Apartment.Builder();
    }

    public static Apartment.Builder builder(Apartment data) {
        return new Apartment.Builder(data);
    }

    public static final class Builder {

        private String title;
        private String url;
        private String price;
        private String rooms;
        private String area;
        private String location;
        private ApartmentSource source;

        private Builder() {
        }

        private Builder(Apartment initialData) {
            this.title = initialData.title;
            this.url = initialData.url;
            this.price = initialData.price;
            this.rooms = initialData.rooms;
            this.area = initialData.area;
            this.location = initialData.location;
            this.source = initialData.source;
        }

        public Builder setTitle(@Nullable String title) {
            this.title = title;
            return this;
        }

        public Builder setUrl(@Nullable String url) {
            this.url = url;
            return this;
        }

        public Builder setPrice(@Nullable String price) {
            this.price = price;
            return this;
        }

        public Builder setRooms(@Nullable String rooms) {
            this.rooms = rooms;
            return this;
        }

        public Builder setArea(@Nullable String area) {
            this.area = area;
            return this;
        }

        public Builder setLocation(@Nullable String location) {
            this.location = location;
            return this;
        }

        public Builder setSource(ApartmentSource source) {
            this.source = source;
            return this;
        }

        public Apartment build() {
            return new Apartment(title, url, price, rooms, area, location, source);
        }
    }// endregion Builder
    // endregion Constructor, getters, equals, hashCode, toString, builder
}
